#!/bin/sh
#******************************************************************************************************************
#     COMPILE KERNEL
#******************************************************************************************************************
# as normal user on linux pc terminal:

echo
echo -------------------------------------------------------------------------------
echo BUILDING KERNEL
echo -------------------------------------------------------------------------------
echo
sleep 1

project=`pwd`

echo ${project}

. ./env_setup

echo ${AM1808_COMPILER}

PATH=${AM1808_COMPILER}:$PATH
# PATH=${AM1808_UBOOT_DIR}/tools:$PATH

echo ${PATH}
 
cd ${AM1808_KERNEL}

echo "Now we're in $(pwd)"


# arm-none-eabi-gcc -v

if [ "$1" = "clean" ]
then
  make distclean ARCH=arm CROSS_COMPILE=${AM1808_ABI}
  cp -v ${project}/ev3dev.config ${AM1808_KERNEL}/.config
  exit 0
fi

if [ "$1" = "modules" ]
then
  make modules ARCH=arm CROSS_COMPILE=${AM1808_ABI}
  exit 0
fi

if [ "$1" = "oldconfig" ]
then
  make oldconfig ARCH=arm CROSS_COMPILE=${AM1808_ABI}
  exit 0
fi

if [ "$1" = "menuconfig" ]
then
  make menuconfig ARCH=arm CROSS_COMPILE=${AM1808_ABI}
  if [ ${AM1808_KERNEL}/.config -nt ${project}/ev3dev.config ]; then
    printf 'Updating local config..\n'
    cp -v ${AM1808_KERNEL}/.config ${project}/ev3dev.config
  fi
  exit 0
fi


if [ "$1" = "modules_install" ]
then
  make modules_install ARCH=arm CROSS_COMPILE=${AM1808_ABI} INSTALL_MOD_PATH=${project}/modules
  rm ${project}/modules/lib/modules/3.3.0+/build
  rm ${project}/modules/lib/modules/3.3.0+/source

  # mkdir -p ${project}/modules/lib/modules/3.3.0
  # cp --parents `find . -name "*.ko"` ${project}/modules/lib/modules/3.3.0
  exit 0
fi

cp ${project}/ev3dev.config ${AM1808_KERNEL}/.config

echo "CROSS COMPILING KERNEL"

make ARCH=arm CROSS_COMPILE=${AM1808_ABI}

echo "BUILDING BOOTABLE IMAGE"

make -j4 uImage ARCH=arm CROSS_COMPILE=${AM1808_ABI}

echo "COPYING BOOTABLE IMAGE TO LOCAL DIRECTORY"

cp ${AM1808_KERNEL}/arch/arm/boot/uImage ${project}/uImage


